#!/bin/bash
if [ "$EUID" -ne 0 ]
    then
    echo -e ""
    echo -e "- - - \e[95mINSTALL SCRIPT\e[39m - - -"
    echo -e ""
    echo -e "sudo is required for this installation, run with sudo"
    exit $?
fi

# You have to use the modules as variables later, this is not enough
declare -a arr=("git" "nodejs" "yarn" "docker" "docker_compose" "maven" "postgres" "go" "vscode_extension_publisher" "user_env")

function get_input
{
    if [ $# -eq 0 ] 
        then
        echo -e ""
        echo -e "get_input(): arguments are required"
        echo -e ""
        echo -e "    usage: get_input [question] [variable_to_store]"
        echo -e ""
        echo -e "    - question:            string (required)"
        echo -e "    - possible_answers:    array (optional)"
        echo -e "    - variable_to_store:   variable (optional)"
        echo -e ""
    elif [ $# -eq 1 ]
        then
        while true; do
            read -p "$1 " answer
            case $answer in
                [Yy]* ) echo true; break;;
                [Nn]* ) echo false; break;;
                * ) echo "Please answer yes or no. answer was $answer";;
            esac
        done
    elif [ $# -eq 2 ]
        then
        local  __resultvar=$2
        while true; do
            read -p "$1 " answer
            case $answer in
                [Yy]* )  eval $__resultvar=true; break;;
                [Nn]* ) eval $__resultvar=false; break;;
                * ) echo "Please answer yes or no. answer was $answer";;
            esac
        done
    else
        echo - "else"
    fi
}

function print_install
{
    if [ $1 = true ] 
        then
        echo -e "- $2: \e[32mtrue\e[39m"
    else
        echo -e "- $2: \e[31mfalse\e[39m"
    fi
}

function ask_for_install
{
    echo -e ""
    echo -e "- - - \e[95mINSTALLATIONS\e[39m - - -"
    echo -e ""

    for i in "${arr[@]}"
    do
        get_input "install $i?" install_$i
    done
}

function print_all_installs
{
    echo -e ""
    echo -e "- - - \e[95mINSTALLATION LIST\e[39m - - -"
    echo -e ""
    print_install $install_user_env "user_env"
    print_install $install_git "git"
    print_install $install_nodejs "nodejs"
    print_install $install_yarn "yarn"
    print_install $install_docker "docker"
    print_install $install_docker_compose "docker_compose"
    print_install $install_maven "maven"
    print_install $install_postgres "postgres"
    print_install $install_go "go"
}


function start_install_choices
{
    while true; do
        ask_for_install
        print_all_installs
        echo -e ""
        get_input "is this list correct?" correct
        if [ $correct = true ]
            then
            break
        fi
    done
}

function print_versions
{
    echo -e ""
    echo -e "- - - \e[95mINSTALLED VERSIONS\e[39m - - -"
    echo -e ""
    if [ $install_git = true ]
        then
        echo -e "$(git --version)"
    fi
    if [ $install_nodejs = true ]
        then
        echo -e "node $(node --version)"
        echo -e "npm $(npm --version)"
    fi
    if [ $install_yarn = true ]
        then
        echo -e "yarn $(yarn --version)"
    fi
    if [ $install_docker = true ]
        then
        docker --version
    fi
    if [ $install_docker_compose = true ]
        then
        docker-compose --version
    fi
    if [ $install_maven = true ]
        then
        mvn --version
    fi
    if [ $install_postgres = true ]
        then
        psql --version
    fi
    if [ $install_go = true ]
        then
        /usr/local/go/bin/go version
    fi
    if [ $install_user_env = true ]
        then
        echo -e "user_env $(grep -m 1 "# version:" ~/.user-env | sed "s/[^.] version: //")"
    fi
}

# Installs

function install_user_env
{
    if [ $install_user_env = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL USER_ENV\e[39m - - -"
        echo -e ""
        curl https://raw.githubusercontent.com/Sly321/home/master/.user-env --output ~/.user-env
        curl https://raw.githubusercontent.com/Sly321/home/master/.user-env-const --output ~/.user-env-const
        if grep -Fxq ". ~/.user-env" ~/.bashrc
        then
            echo "Found that .bashrc sourced the user_env already"
        else
            echo ". ~/.user-env" >> ~/.bashrc
        fi
        eval "source ~/.user-env"
        echo -e "OK"
    fi
}

function install_git_func
{
    if [ $install_git = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL GIT\e[39m - - -"
        echo -e ""
        sudo apt-get -qq install -y git-all
        echo -e "OK"
    fi
}

function install_yarn_func
{
    if [ $install_yarn = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL YARN\e[39m - - -"
        echo -e ""
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        sudo apt-get -qq  -y update && sudo apt-get -qq  install -y yarn
    fi
}

function install_nodejs_func
{
    if [ $install_nodejs = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL NODEJS / NPM\e[39m - - -"
        echo -e ""
        curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
        sudo apt-get -qq install -y nodejs
    fi
}

function install_go_func
{
    if [ $install_go = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL GO\e[39m - - -"
        echo -e ""
        curl https://dl.google.com/go/go1.9.4.linux-amd64.tar.gz --output ~/go.tar.gz
        sudo tar -C /usr/local -xzf ~/go.tar.gz
        echo "alias go=/usr/local/go/bin/go" >> ~/.bashrc
        alias go=/usr/local/go/bin/go
        echo -e "OK"
        rm -r go.tar.gz
    fi
}

function install_docker_func
{
    if [ $install_docker = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL DOCKER\e[39m - - -"
        echo -e ""
        sudo apt-get -qq remove docker docker-engine docker.io
        sudo apt-get -y -qq install \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo apt-key fingerprint 0EBFCD88
        sudo add-apt-repository \
        "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) \
        stable"
        sudo apt-get -y -qq update
        sudo apt-get -qq install -y docker-ce
        cache madison docker-ce
        echo -e "OK"
    fi
}

function install_docker_compose_func
{
    if [ $install_docker_compose = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL DOCKER_COMPOSE\e[39m - - -"
        echo -e ""
        sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        echo -e "OK"
    fi
}

function install_postgres_func
{
    if [ $install_postgres = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL POSTGRES\e[39m - - -"
        echo -e ""
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
        sudo apt-key add -
        sudo apt-get -qq -y update
        sudo apt install -y postgresql-client-common
        sudo apt-get -qq install -y postgresql
        echo -e "OK"
    fi
}

function install_maven_func
{
    if [ $install_maven = true ]
        then
        echo -e ""
        echo -e "- - - \e[95mINSTALL POSTGRES\e[39m - - -"
        echo -e ""
        cd /opt/
        sudo mkdir --parent dist-install/maven
        cd dist-install/maven
        sudo wget http://mirror.softaculous.com/apache/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz
        sudo tar -xvzf apache*.tar.gz
        sudo rm -rf apache*.tar.gz
        sudo ln -s /opt/dist-install/maven/apache-maven-3.5.2 /opt/maven
        export M2_HOME="/opt/maven"
        export PATH=$M2_HOME/bin:$PATH
        echo -e "OK"
    fi
}

function update_system_func
{
    printf "\n- - - \e[95mUPDATE SYSTEM\e[39m - - -\n\n"
    sudo apt-get -qq -y update
}


# PROGRAMM START

start_install_choices

echo -e ""
echo -e "- - - \e[95mSTART INSTALLATION\e[39m - - -"
echo -e ""

update_system_func
install_user_env
install_git_func
install_yarn_func
install_nodejs_func
install_go_func
install_docker_func
install_docker_compose_func
install_postgres_func
install_maven_func

print_versions
